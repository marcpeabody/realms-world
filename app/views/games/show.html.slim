- @game_state = @game.game_state
- p1_turn = @game_state.active_player == @game_state.p1
- p2_turn = @game_state.active_player == @game_state.p2



table
  thead
    tr
      th Zone
      th Trade Deck
  tbody
    tr
      td Trade Row
      td = @game_state.trade_deck.trade_row.cards.map(&:key)
    tr
      td Draw Pile
      td = @game_state.trade_deck.draw_pile.cards.map(&:key)
    tr
      td Explorers
      td = @game_state.trade_deck.explorers.cards.map(&:key)
    tr
      td Scrap Heap
      td = @game_state.trade_deck.scrap_heap.cards.map(&:key)

hr

table
  thead
    tr
      th Zone
      th Player 1 (#{@game_state.p1.authority})
      th Player 2 (#{@game_state.p2.authority})
  tbody
    tr
      td Trade
      td = p1_turn ? @game_state.active_turn.trade : "N/A"
      td = p2_turn ? @game_state.active_turn.trade : "N/A"
    tr
      td Combat
      td = p1_turn ? @game_state.active_turn.combat : "N/A"
      td = p2_turn ? @game_state.active_turn.combat : "N/A"
    tr
      td Hand
      td = @game_state.p1.deck.hand.cards.map(&:key)
      td = @game_state.p2.deck.hand.cards.map(&:key)
    tr
      td In play
      td = @game_state.p1.deck.in_play.cards.map(&:key)
      td = @game_state.p2.deck.in_play.cards.map(&:key)
    tr
      td Draw Pile
      td = @game_state.p1.deck.draw_pile.cards.map(&:key)
      td = @game_state.p2.deck.draw_pile.cards.map(&:key)
    tr
      td Discard Pile
      td = @game_state.p1.deck.discard_pile.cards.map(&:key)
      td = @game_state.p2.deck.discard_pile.cards.map(&:key)
    tr
      td Choice
      td
        - if @game_state.current_choice
          = form_for([@game, Decision.new]) do |f|
            = f.select :key, @game_state.current_choice.options.map { |k,v| [k,k] }
            = f.submit disabled: p2_turn
        - elsif @game_state.p1.authority < 0
          | Lose
        - elsif @game_state.p1.authority > 0
          | Win

      td
        - if @game_state.current_choice
          = form_for([@game, Decision.new]) do |f|
            = f.select :key, @game_state.current_choice.options.map { |k,v| [k,k] }
            = f.submit disabled: p1_turn
        - elsif @game_state.p2.authority < 0
          | Lose
        - elsif @game_state.p2.authority > 0
          | Win
